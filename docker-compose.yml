version: "3.9"
services:
  postgres:
    image: postgres:16
    container_name: rr-postgres
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: rr
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U app"]
      interval: 5s
      timeout: 5s
      retries: 10

  minio:
    image: minio/minio:RELEASE.2024-05-28T17-19-04Z
    container_name: rr-minio
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD","curl","-f","http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 10

  createbuckets:
    image: minio/mc:latest
    container_name: rr-minio-init
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        mc alias set local http://minio:9000 minioadmin minioadmin &&
        mc mb -p local/resumes || true &&
        printf '%s' '[{\"AllowedOrigin\":[\"http://localhost:3000\"],\"AllowedMethod\":[\"PUT\",\"GET\",\"POST\"],\"AllowedHeader\":[\"*\"],\"ExposeHeader\":[\"ETag\"],\"MaxAgeSeconds\":3000}]' > /tmp/cors.json &&
        mc cors set local/resumes /tmp/cors.json &&
        exit 0
      "

  api:
    build:
      context: ./api
    container_name: rr-api
    env_file: .env
    environment:
      AWS_ACCESS_KEY_ID: ${S3_ACCESS_KEY}
      AWS_SECRET_ACCESS_KEY: ${S3_SECRET_KEY}
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
    depends_on:
      - postgres
      - minio
      - createbuckets

  frontend:
    build:
      context: ./frontend
    container_name: rr-frontend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - api


