version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: perfectcandidate-db
    environment:
      POSTGRES_DB: perfectcandidate
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d perfectcandidate"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MinIO S3-compatible storage
  minio:
    image: minio/minio:latest
    container_name: perfectcandidate-storage
    command: server /data --console-address ":9001"
    environment:
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: perfectcandidate-api
    environment:
      DATABASE_URL: postgresql://user:password@postgres:5432/perfectcandidate
      MINIO_ENDPOINT: minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET: resumes
      MINIO_SECURE: "false"
    ports:
      - "8000:8000"
    volumes:
      - ./api:/app
      - ./storage:/app/storage
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    develop:
      watch:
        - action: sync
          path: ./api
          target: /app
          ignore:
            - __pycache__/
        - action: rebuild
          path: ./api/requirements.txt

  # Next.js Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: perfectcandidate-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      api:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
            - .next/
        - action: rebuild
          path: ./frontend/package.json

volumes:
  postgres_data:
  minio_data:

networks:
  default:
    name: perfectcandidate-network
